// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/airstack-xyz/service-balance-snapshot/pkg/model"
	mock "github.com/stretchr/testify/mock"
)

// ITokensRepository is an autogenerated mock type for the ITokensRepository type
type ITokensRepository struct {
	mock.Mock
}

// GetToken provides a mock function with given fields: ctx, id
func (_m *ITokensRepository) GetToken(ctx context.Context, id string) (*model.Token, error) {
	ret := _m.Called(ctx, id)

	var r0 *model.Token
	if rf, ok := ret.Get(0).(func(context.Context, string) *model.Token); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Token)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewITokensRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewITokensRepository creates a new instance of ITokensRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewITokensRepository(t mockConstructorTestingTNewITokensRepository) *ITokensRepository {
	mock := &ITokensRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
